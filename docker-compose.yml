services:
  backend:
    container_name: teachers-coach-teachers-backend
    env_file:
      - .env
    build:
      context: ./flask_app
    ports:
      - "5001:5001"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=flask_app/run.py
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=1
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - PYTHONPATH=/app
    user: "${UID}:${GID}"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: ankane/pgvector:latest
    container_name: tct_postgres
    volumes:
      - tct_postgres_data_2:/var/lib/postgresql/data
    # Leave ports here even if commented out. Allows for easy debugging/direct connecting to the database locally
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    command: >
      bash -c "
        docker-entrypoint.sh postgres &
        sleep 5 &&
        psql -U $$POSTGRES_USER -d $$POSTGRES_DB -c 'CREATE EXTENSION IF NOT EXISTS vector;' &&
        wait
      "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1s
      timeout: 2s
      retries: 15
      start_period: 1s

  expo-frontend:
    container_name: expo-frontend
    build:
      context: ./mobile
    ports:
      - "19000:19000"
      - "8081:8081"
    volumes:
      - ./mobile:/app
      - /app/node_modules
    command: npx expo start --tunnel
    user: "${UID}:${GID}"
    environment:
      - NODE_ENV=development

volumes:
  tct_postgres_data_2:
